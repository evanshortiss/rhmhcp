/**
 * RHMHCP
 * Red Hat Mobile Hot Code Push API
 *
 * OpenAPI spec version: 0.1.0
 * Contact: kxiang@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Rhmhcp) {
      root.Rhmhcp = {};
    }
    root.Rhmhcp.DeploymentTargetRHMAPHostApp = factory(root.Rhmhcp.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The DeploymentTargetRHMAPHostApp model module.
   * @module model/DeploymentTargetRHMAPHostApp
   * @version 0.1.0
   */

  /**
   * Constructs a new <code>DeploymentTargetRHMAPHostApp</code>.
   * Host app configuration
   * @alias module:model/DeploymentTargetRHMAPHostApp
   * @class
   * @param gitUrl {String} Host app git url. This is where the code push happens.
   * @param webUrl {String} Url for client to download assets
   */
  var exports = function(gitUrl, webUrl) {
    var _this = this;

    _this['gitUrl'] = gitUrl;

    _this['webUrl'] = webUrl;
  };

  /**
   * Constructs a <code>DeploymentTargetRHMAPHostApp</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DeploymentTargetRHMAPHostApp} obj Optional instance to populate.
   * @return {module:model/DeploymentTargetRHMAPHostApp} The populated <code>DeploymentTargetRHMAPHostApp</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('gitUrl')) {
        obj['gitUrl'] = ApiClient.convertToType(data['gitUrl'], 'String');
      }
      if (data.hasOwnProperty('gitKey')) {
        obj['gitKey'] = ApiClient.convertToType(data['gitKey'], 'String');
      }
      if (data.hasOwnProperty('webUrl')) {
        obj['webUrl'] = ApiClient.convertToType(data['webUrl'], 'String');
      }
    }
    return obj;
  }

  /**
   * Host app git url. This is where the code push happens.
   * @member {String} gitUrl
   */
  exports.prototype['gitUrl'] = undefined;
  /**
   * Private key to be able to push git. If not set, will attempt to use username / password set
   * @member {String} gitKey
   */
  exports.prototype['gitKey'] = undefined;
  /**
   * Url for client to download assets
   * @member {String} webUrl
   */
  exports.prototype['webUrl'] = undefined;



  return exports;
}));


